#Arguments needed to create proper paths to everything
scenario: MaterialTransportGNN #name of the folder inside scenarios
model_config_file: qmix.json #The config file from sacred for the model
model_file: qmix.th #The saved model weights
actor_file: rnn_agent #The file the actor model architecture lives in
actor_class: RNNAgent #The class the actor model architecture is in
env_file: MaterialTransportGNN #The .py file this environment is in
env_class: MaterialTransportGNN #This needs to have all of the functionalities of a gym to work

#Arguments needed by main, will not affect training
n_actions: 20 #The number of actions available for the agent
episodes: 10 #Number of episodes to run for
shared_reward: True #Purely for evaluation information

#Arguments neeeded for most scenarios
n_agents: 4 #Number of agents to run
show_figure_frequency: -1 #Set to -1 to turn off figures. Needs to be 1 when submitting to Robotarium
real_time: False #Set to true for debugging only
max_episode_steps: 60 #maximum number of steps an episode can take
update_frequency: 69 #How often new actions are given to the robotarium
start_dist: .3 #Minimum distance the agents start from each other
robotarium: False #Should be False during training to speed up robots, needs to be true when submitting
barrier_certificate: safe #Can be safe or default for strong or weak barrier certificates
penalize_violations: False #If true, agents get a negative reward for collisions or boundary infractions and the episode stops
LEFT: -1.40 #Minimum x coordinate the robots are allowed to navigate to and start at
RIGHT: 1.40 #Maxiumum x coordinate the robots are allowed to navigate to and start at
UP: -0.9 #Minimum y coordinate the robots are allowed to navigate to and start at
DOWN: 0.9 #Maxiumum y coordinate the robots are allowed to navigate to and start at
delta: -1 #Used to determine the adjacency matrix, set to -1 for full communication
seed: 100

#Arguments needed by this scenario
end_goal_width: .5
unload_multiplier: .075
load_multiplier: .025
time_penalty: -0.1
zone1_radius: .35
zone1:
  distribution: 'normal'
  loc: 100
  scale: 0
zone2:
  distribution: 'normal'
  loc: 20
  scale: 0
power: 2.25
traits:
  torque: #Torque = capacity here
    distribution: 'uniform'
    low: 5
    high: 22
n_train_agents: 100
n_test_agents: 10
test: False
resample: True #Set to true to resample the agents every episode