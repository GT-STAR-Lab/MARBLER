#Arguments needed to create proper paths to everything
scenario: Warehouse #name of the folder inside scenarios
model_config_file: vdn_ns.json #The config file from sacred for the model
model_file: vdn_ns.th #The saved model weights
actor_file: rnn_ns_agent #The file the actor model architecture lives in
actor_class: RNNNSAgent #The class the actor model architecture is in
env_file: warehouse #The .py file this environment is in
env_class: Warehouse #This needs to have all of the functionalities of a gym to work

#Arguments needed by main, will not affect training
n_actions: 5 #The number of actions available for the agent
episodes: 10 #Number of episodes to run for
shared_reward: False #Purely for evaluation information

seed: -1 #sets the seed. Set to -1 to use a random seed.

#Arguments neeeded for most scenarios
n_agents: 6 #Number of agents to run
show_figure_frequency: -1 #Set to -1 to turn off figures. Needs to be 1 when submitting to Robotarium
real_time: False #Set to true for debugging only
num_neighbors: 5 #Number of neighbors to communicate with
max_episode_steps: 100 #maximum number of steps an episode can take
update_frequency: 29 #How often new actions are given to the robotarium
step_dist : 0.2 #The amount of distance the robots move per time step assuming time allows
start_dist: .6 #Minimum distance the agents start from each other
robotarium: False #Should be False during training to speed up robots, needs to be true when submitting
barrier_certificate: safe #Can be safe or default for strong or weak barrier certificates
penalize_violations: True #If true, agents get a negative reward for collisions or boundary infractions and the episode stops
LEFT: -1.40 #Minimum x coordinate the robots are allowed to navigate to and start at
RIGHT: 1.40 #Maxiumum x coordinate the robots are allowed to navigate to and start at
UP: -0.9 #Minimum y coordinate the robots are allowed to navigate to and start at
DOWN: 0.9 #Maxiumum y coordinate the robots are allowed to navigate to and start at

#Arguments needed by this scenario
load_reward: 1
unload_reward: 3
goal_width: .5
